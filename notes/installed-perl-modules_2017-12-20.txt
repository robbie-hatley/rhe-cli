AnyDBM_File               - provide framework for multiple DBMs
App::Cpan                 - easily interact with CPAN from the command line
App::Prove                - Implements the C<prove> command.
App::Prove::State         - State storage for the C<prove> command.
App::Prove::State::Result - Individual test suite results.
App::Prove::State::Result::Test - Individual test results.
App::cpanminus            - get, unpack, build and install modules from CPAN
Archive::Tar              - module for manipulations of tar archives
Archive::Tar::File        - a subclass for in-memory extracted file from Archive::Tar
Attribute::Handlers       - Simpler definition of attribute handlers
Authen::SASL::Perl::ANONYMOUS - Anonymous Authentication class
Authen::SASL::Perl::CRAM_MD5 - CRAM MD5 Authentication class
Authen::SASL::Perl::DIGEST_MD5 - Digest MD5 Authentication class
Authen::SASL::Perl::EXTERNAL - External Authentication class
Authen::SASL::Perl::GSSAPI - GSSAPI (Kerberosv5) Authentication class
Authen::SASL::Perl::LOGIN - Login Authentication class
Authen::SASL::Perl::PLAIN - Plain Login Authentication class
AutoLoader                - load subroutines only on demand
AutoSplit                 - split a package for autoloading
B                         - The Perl Compiler Backend
B::Concise                - Walk Perl syntax tree, printing concise info about ops
B::Debug                  - Walk Perl syntax tree, printing debug info about ops
B::Deparse                - Perl compiler backend to produce perl code
B::Op_private             - OP op_private flag definitions
B::Showlex                - Show lexical variables used in functions or files
B::Terse                  - Walk Perl syntax tree, printing terse info about ops
B::Xref                   - Generates cross reference reports for Perl programs
Benchmark                 - benchmark running times of Perl code
C<IO::Socket::IP>         - Family-neutral IP socket supporting both IPv4 and IPv6
C<List::UtilsBy>          - higher-order list utility functions
C<Socket>                 - networking constants and support functions
CPAN                      - query, download and build perl modules from CPAN sites
CPAN::Changes             - Read and write Changes files
CPAN::Changes::Group      - A group of related change information within a release
CPAN::Changes::Release    - Information about a particular release
CPAN::Debug               - internal debugging for CPAN.pm
CPAN::DistnameInfo        - Extract distribution name and version from a distribution filename
CPAN::Distroprefs         - read and match distroprefs
CPAN::FirstTime           - Utility for CPAN::Config file Initialization
CPAN::HandleConfig        - internal configuration handling for CPAN.pm
CPAN::Kwalify             - Interface between CPAN.pm and Kwalify.pm
CPAN::Meta                - the distribution metadata for a CPAN dist
CPAN::Meta::Check         - Verify requirements in a CPAN::Meta object
CPAN::Meta::Converter     - Convert CPAN distribution metadata structures
CPAN::Meta::Feature       - an optional feature provided by a CPAN distribution
CPAN::Meta::History       - history of CPAN Meta Spec changes
CPAN::Meta::Merge         - Merging CPAN Meta fragments
CPAN::Meta::Prereqs       - a set of distribution prerequisites by phase and type
CPAN::Meta::Requirements  - a set of version requirements for a CPAN dist
CPAN::Meta::Spec          - specification for CPAN distribution metadata
CPAN::Meta::Validator     - validate CPAN distribution metadata structures
CPAN::Meta::YAML          - Read and write a subset of YAML for CPAN Meta files
CPAN::Mirrors             - Get CPAN mirror information and select a fast one
CPAN::Nox                 - Wrapper around CPAN.pm without using any XS module
CPAN::Plugin              - Base class for CPAN shell extensions
CPAN::Plugin::Specfile    - Proof of concept implementation of a trivial CPAN::Plugin
CPAN::Queue               - internal queue support for CPAN.pm
CPAN::Reporter            - Adds CPAN Testers reporting to CPAN.pm
CPAN::Reporter::API       - Programmer's interface to CPAN::Reporter
CPAN::Reporter::Config    - Config file options for CPAN::Reporter
CPAN::Reporter::FAQ       - Answers and tips for using CPAN::Reporter
CPAN::Reporter::History   - Read or write a CPAN::Reporter history log
CPAN::Reporter::PrereqCheck - Modulino for prerequisite tests
CPAN::Tarzip              - internal handling of tar archives for CPAN.pm
CPAN::Testers::Fact::InstalledModules - Versions of particular modules installed on a system
CPAN::Testers::Fact::LegacyReport - an email-style report for CPAN Testers
CPAN::Testers::Fact::PerlConfig - Perl build and configuration information for a CPAN Testers report
CPAN::Testers::Fact::Prereqs - prerequisites detected in running a CPAN Testers report
CPAN::Testers::Fact::TestEnvironment - Environment vars and other local context during a CPAN Testers report
CPAN::Testers::Fact::TestOutput - output from configuration, build and test
CPAN::Testers::Fact::TestSummary - summary of a CPAN Testers analysis of a distribution
CPAN::Testers::Fact::TesterComment - comment about a CPAN Tester report
CPAN::Testers::Report     - CPAN Testers report object
CPAN::Version             - utility functions to compare CPAN versions
Capture::Tiny             - Capture STDOUT and STDERR from Perl, XS or external programs
Carp                      - alternative warn and die for modules
Class::Struct             - declare struct-like datatypes as Perl classes
Class::XSAccessor         - Generate fast XS accessors without runtime compilation
Class::XSAccessor::Array  - Generate fast XS accessors without runtime compilation
Class::XSAccessor::Heavy  - Guts you don't care about
Compress::Raw::Bzip2      - Low-Level Interface to bzip2 compression library
Compress::Raw::Zlib       - Low-Level Interface to zlib compression library
Compress::Zlib            - Interface to zlib compression library
Config::Extensions        - hash lookup of which core extensions were built.
Config::Perl::V           - Structured data retrieval of perl -V output
Config::Tiny              - Read/Write .ini style files with as little code as possible
Cpanel::JSON::XS          - cPanel fork of JSON::XS, fast and correct serializing
Cpanel::JSON::XS::Boolean - dummy module providing JSON::XS::Boolean
Cwd                       - get pathname of current working directory
DB                        - programmatic interface to the Perl debugging API
DBM_Filter                - Filter DBM keys/values 
DBM_Filter::compress      - filter for DBM_Filter
DBM_Filter::encode        - filter for DBM_Filter
DBM_Filter::int32         - filter for DBM_Filter
DBM_Filter::null          - filter for DBM_Filter
DBM_Filter::utf8          - filter for DBM_Filter
DB_File                   - Perl5 access to Berkeley DB version 1.x
Data::Dumper              - stringified perl data structures, suitable for both printing and C<eval>
Data::GUID                - globally unique identifiers
Data::OptList             - parse and validate simple name/value option pairs
Data::UUID                - Globally/Universally Unique Identifiers (GUIDs/UUIDs)
Date::Format              - Date formating subroutines
Date::Language            - Language specific date formating and parsing
Date::Language::Bulgarian - localization for Date::Format
Date::Language::Hungarian - Magyar format for Date::Format
Date::Parse               - Parse date strings into time values
Devel::Autoflush          - Set autoflush from the command line
Devel::InnerPackage       - find all the inner packages of a package
Devel::PPPort             - Perl/Pollution/Portability
Devel::Peek               - A data debugging tool for the XS programmer
Devel::SelfStubber        - generate stubs for a SelfLoading module
Digest                    - Modules that calculate message digests
Digest::HMAC              - Keyed-Hashing for Message Authentication
Digest::HMAC_MD5          - Keyed-Hashing for Message Authentication
Digest::HMAC_SHA1         - Keyed-Hashing for Message Authentication
Digest::MD5               - Perl interface to the MD5 Algorithm
Digest::SHA               - Perl extension for SHA-1/224/256/384/512
Digest::base              - Digest base class
Digest::file              - Calculate digests of files
DirHandle                 - supply object methods for directory handles
Dumpvalue                 - provides screen dump of Perl data.
DynaLoader                - Dynamically load C libraries into Perl code
Encode                    - character encodings in Perl
Encode::Alias             - alias definitions to encodings
Encode::Byte              - Single Byte Encodings
Encode::CJKConstants.pm   - Internally used by Encode::??::ISO_2022_*
Encode::CN                - China-based Chinese Encodings
Encode::CN::HZ            - internally used by Encode::CN
Encode::Config            - internally used by Encode
Encode::EBCDIC            - EBCDIC Encodings
Encode::Encoder           - Object Oriented Encoder
Encode::Encoding          - Encode Implementation Base Class
Encode::GSM0338           - ESTI GSM 03.38 Encoding
Encode::Guess             - Guesses encoding from data
Encode::JP                - Japanese Encodings
Encode::JP::H2Z           - internally used by Encode::JP::2022_JP*
Encode::JP::JIS7          - internally used by Encode::JP
Encode::KR                - Korean Encodings
Encode::KR::2022_KR       - internally used by Encode::KR
Encode::MIME::Header      - MIME encoding for an unstructured email header
Encode::MIME::NAME        - internally used by Encode
Encode::Symbol            - Symbol Encodings
Encode::TW                - Taiwan-based Chinese Encodings
Encode::Unicode           - Various Unicode Transformation Formats
Encode::Unicode::UTF7     - UTF-7 encoding
English                   - use nice English (or awk) names for ugly punctuation variables
Env                       - perl module that imports environment variables as scalars or arrays
Errno                     - System errno constants
Exporter                  - Implements default import method for modules
Exporter::Heavy           - Exporter guts
Exporter::Shiny           - shortcut for Exporter::Tiny
Exporter::Tiny            - an exporter with the features of Sub::Exporter but only core dependencies
ExtUtils::CBuilder        - Compile and link C code for Perl modules
ExtUtils::CBuilder::Platform::Windows - Builder class for Windows platforms
ExtUtils::Command         - utilities to replace common UNIX commands in Makefiles etc.
ExtUtils::Command::MM     - Commands for the MM's to use in Makefiles
ExtUtils::Config          - A wrapper for perl's configuration
ExtUtils::Constant        - generate XS code to import C header constants
ExtUtils::Constant::Base  - base class for ExtUtils::Constant objects
ExtUtils::Constant::Utils - helper functions for ExtUtils::Constant
ExtUtils::Constant::XS    - generate C code for XS modules' constants.
ExtUtils::Embed           - Utilities for embedding Perl in C/C++ applications
ExtUtils::Helpers         - Various portability utilities for module builders
ExtUtils::Helpers::Unix   - Unix specific helper bits
ExtUtils::Helpers::VMS    - VMS specific helper bits
ExtUtils::Helpers::Windows - Windows specific helper bits
ExtUtils::Install         - install files from here to there
ExtUtils::InstallPaths    - Build.PL install path logic made easy
ExtUtils::Installed       - Inventory management of installed modules
ExtUtils::Liblist         - determine libraries to use and how to use them
ExtUtils::MM              - OS adjusted ExtUtils::MakeMaker subclass
ExtUtils::MM_AIX          - AIX specific subclass of ExtUtils::MM_Unix
ExtUtils::MM_Any          - Platform-agnostic MM methods
ExtUtils::MM_BeOS         - methods to override UN*X behaviour in ExtUtils::MakeMaker
ExtUtils::MM_Cygwin       - methods to override UN*X behaviour in ExtUtils::MakeMaker
ExtUtils::MM_DOS          - DOS specific subclass of ExtUtils::MM_Unix
ExtUtils::MM_Darwin       - special behaviors for OS X
ExtUtils::MM_MacOS        - once produced Makefiles for MacOS Classic
ExtUtils::MM_NW5          - methods to override UN*X behaviour in ExtUtils::MakeMaker
ExtUtils::MM_OS2          - methods to override UN*X behaviour in ExtUtils::MakeMaker
ExtUtils::MM_QNX          - QNX specific subclass of ExtUtils::MM_Unix
ExtUtils::MM_UWIN         - U/WIN specific subclass of ExtUtils::MM_Unix
ExtUtils::MM_Unix         - methods used by ExtUtils::MakeMaker
ExtUtils::MM_VMS          - methods to override UN*X behaviour in ExtUtils::MakeMaker
ExtUtils::MM_VOS          - VOS specific subclass of ExtUtils::MM_Unix
ExtUtils::MM_Win32        - methods to override UN*X behaviour in ExtUtils::MakeMaker
ExtUtils::MM_Win95        - method to customize MakeMaker for Win9X
ExtUtils::MY              - ExtUtils::MakeMaker subclass for customization
ExtUtils::MakeMaker       - Create a module Makefile
ExtUtils::MakeMaker::Config - Wrapper around Config.pm
ExtUtils::MakeMaker::Locale - bundled Encode::Locale
ExtUtils::Manifest        - utilities to write and check a MANIFEST file
ExtUtils::Miniperl        - write the C code for miniperlmain.c and perlmain.c
ExtUtils::Mkbootstrap     - make a bootstrap file for use by DynaLoader
ExtUtils::Mksymlists      - write linker options files for dynamic extension
ExtUtils::Packlist        - manage .packlist files
ExtUtils::ParseXS::Constants - Initialization values for some globals
ExtUtils::ParseXS::Eval   - Clean package to evaluate code in
ExtUtils::ParseXS::Utilities - Subroutines used with ExtUtils::ParseXS
ExtUtils::Typemaps        - Read/Write/Modify Perl/XS typemap files
ExtUtils::Typemaps::Cmd   - Quick commands for handling typemaps
ExtUtils::Typemaps::InputMap - Entry in the INPUT section of a typemap
ExtUtils::Typemaps::OutputMap - Entry in the OUTPUT section of a typemap
ExtUtils::Typemaps::Type  - Entry in the TYPEMAP section of a typemap
ExtUtils::XSpp::Cmd       - implementation of xspp
ExtUtils::XSpp::Exception - Map C++ exceptions to Perl exceptions
ExtUtils::XSpp::Node      - Base class for elements of the parser output
ExtUtils::XSpp::Node::Access - Node representing an access specifier
ExtUtils::XSpp::Node::Argument - Node representing a method/function argument
ExtUtils::XSpp::Node::Class - A class (inherits from Package).
ExtUtils::XSpp::Node::Comment - Node representing a comment in the source file
ExtUtils::XSpp::Node::Constructor - Node representing a constructor method
ExtUtils::XSpp::Node::Destructor - Node representing a destructor method
ExtUtils::XSpp::Node::Enum - Node representing an enum declaration
ExtUtils::XSpp::Node::EnumValue - Node representing an enum element
ExtUtils::XSpp::Node::File - Directive that sets the name of the output file
ExtUtils::XSpp::Node::Function - Node representing a function
ExtUtils::XSpp::Node::Member - Node representing a class member variable
ExtUtils::XSpp::Node::Method - Node representing a method
ExtUtils::XSpp::Node::Module - Node representing an XS++/XS MODULE declaration
ExtUtils::XSpp::Node::Package - Node representing a Perl package
ExtUtils::XSpp::Node::PercAny - contains information about %Foo tags handled by plugins
ExtUtils::XSpp::Node::Raw - Node for data that should be included in XS verbatim
ExtUtils::XSpp::Parser    - an XS++ parser
ExtUtils::XSpp::Typemap   - map types
ExtUtils::testlib         - add blib/* directories to @INC
Fatal                     - Replace functions with equivalents which succeed or die
Fcntl                     - load the C Fcntl.h defines
File::Basename            - Parse file paths into directory, filename and suffix.
File::Compare             - Compare files or filehandles
File::Copy                - Copy files or filehandles
File::DosGlob             - DOS like globbing and then some
File::Fetch               - A generic file fetching mechanism
File::Find                - Traverse a directory tree.
File::Glob                - Perl extension for BSD glob routine
File::GlobMapper          - Extend File Glob to Allow Input and Output Files
File::HomeDir             - Find your home and other directories on any platform
File::HomeDir::Darwin     - Find your home and other directories on Darwin (OS X)
File::HomeDir::Darwin::Cocoa - Find your home and other directories on Darwin (OS X)
File::HomeDir::Driver     - Base class for all File::HomeDir drivers
File::HomeDir::FreeDesktop - Find your home and other directories on FreeDesktop.org Unix
File::HomeDir::MacOS9     - Find your home and other directories on legacy Macs
File::HomeDir::Test       - Prevent the accidental creation of user-owned files during testing
File::HomeDir::Unix       - Find your home and other directories on legacy Unix
File::HomeDir::Windows    - Find your home and other directories on Windows
File::Path                - Create or remove directory trees
File::Spec                - portably perform operations on file names
File::Spec::AmigaOS       - File::Spec for AmigaOS
File::Spec::Cygwin        - methods for Cygwin file specs
File::Spec::Epoc          - methods for Epoc file specs
File::Spec::Functions     - portably perform operations on file names
File::Spec::Mac           - File::Spec for Mac OS (Classic)
File::Spec::OS2           - methods for OS/2 file specs
File::Spec::Unix          - File::Spec for Unix, base for other File::Spec modules
File::Spec::VMS           - methods for VMS file specs
File::Spec::Win32         - methods for Win32 file specs
File::Temp                - return name and handle of a temporary file safely
File::Which               - Perl implementation of the which utility as an API
File::stat                - by-name interface to Perl's built-in stat() functions
FileCache                 - keep more files open than the system permits
FileHandle                - supply object methods for filehandles
Filter::Simple            - Simplified source filtering
Filter::Util::Call        - Perl Source Filter Utility Module
FindBin                   - Locate directory of original perl script
GDBM_File                 - Perl5 access to the gdbm library.
Getopt::Long              - Extended processing of command line options
Getopt::Std               - Process single-character switches with switch clustering
HTTP::Tiny                - A small, simple, correct HTTP/1.1 client
Hash::Util                - A selection of general-utility hash subroutines
Hash::Util::FieldHash     - Support for Inside-Out Classes
I18N::Collate             - compare 8-bit scalar data according to the current locale
I18N::LangTags            - functions for dealing with RFC3066-style language tags
I18N::LangTags::Detect    - detect the user's language preferences
I18N::LangTags::List      - tags and names for human languages
I18N::Langinfo            - query locale information
IO                        - load various IO modules
IO::Compress::Base        - Base Class for IO::Compress modules 
IO::Compress::Bzip2       - Write bzip2 files/buffers
IO::Compress::Deflate     - Write RFC 1950 files/buffers
IO::Compress::Gzip        - Write RFC 1952 files/buffers
IO::Compress::RawDeflate  - Write RFC 1951 files/buffers
IO::Compress::Zip         - Write zip files/buffers
IO::Dir                   - supply object methods for directory handles
IO::File                  - supply object methods for filehandles
IO::Handle                - supply object methods for I/O handles
IO::Pipe                  - supply object methods for pipes
IO::Poll                  - Object interface to system poll call
IO::Prompt::Tiny          - Prompt for user input with a default option
IO::Seekable              - supply seek based methods for I/O objects
IO::Select                - OO interface to the select system call
IO::Socket                - Object interface to socket communications
IO::Socket::INET          - Object interface for AF_INET domain sockets
IO::Socket::SSL::Intercept - SSL interception (man in the middle)
IO::Socket::SSL::PublicSuffix - provide access to Mozilla's list of effective TLD names
IO::Socket::SSL::Utils    - loading, storing, creating certificates and keys
IO::Socket::UNIX          - Object interface for AF_UNIX domain sockets
IO::Uncompress::AnyInflate - Uncompress zlib-based (zip, gzip) file/buffer
IO::Uncompress::AnyUncompress - Uncompress gzip, zip, bzip2 or lzop file/buffer
IO::Uncompress::Base      - Base Class for IO::Uncompress modules 
IO::Uncompress::Bunzip2   - Read bzip2 files/buffers
IO::Uncompress::Gunzip    - Read RFC 1952 files/buffers
IO::Uncompress::Inflate   - Read RFC 1950 files/buffers
IO::Uncompress::RawInflate - Read RFC 1951 files/buffers
IO::Uncompress::Unzip     - Read zip files/buffers
IO::Zlib                  - IO:: style interface to L<Compress::Zlib>
IPC::Cmd                  - finding and running system commands made easy
IPC::Msg                  - SysV Msg IPC object class
IPC::Open2                - open a process for both reading and writing using open2()
IPC::Open3                - open a process for reading, writing, and error handling using open3()
IPC::Semaphore            - SysV Semaphore IPC object class
IPC::SharedMem            - SysV Shared Memory IPC object class
IPC::SysV                 - System V IPC constants and system calls
Importer                  - Alternative but compatible interface to modules that export symbols.
JSON::MaybeXS             - Use L<Cpanel::JSON::XS> with a fallback to L<JSON::XS> and L<JSON::PP>
JSON::PP                  - JSON::XS compatible pure-Perl module.
JSON::PP::Boolean         - dummy module providing JSON::PP::Boolean
JSON::XS                  - JSON serialising/deserialising, done correctly and fast
JSON::XS::Boolean         - dummy module providing JSON::XS::Boolean
List::AllUtils            - Combines List::Util, List::SomeUtils and List::UtilsBy in one bite-sized package
List::MoreUtils           - Provide the stuff missing in List::Util
List::MoreUtils::PP       - Provide List::MoreUtils pure Perl implementation
List::MoreUtils::XS       - Provide compiled List::MoreUtils functions
List::SomeUtils           - Provide the stuff missing in List::Util
List::SomeUtils::PP       - Pure Perl implementation for List::SomeUtils
List::SomeUtils::XS       - XS implementation for List::SomeUtils
List::Util                - A selection of general-utility list subroutines
List::Util::XS            - Indicate if List::Util was compiled with a C compiler
Locale::Maketext::Guts    - Deprecated module to load Locale::Maketext utf8 code
Locale::Maketext::GutsLoader - Deprecated module to load Locale::Maketext utf8 code
Locale::Maketext::Simple  - Simple interface to Locale::Maketext::Lexicon
MIME-tools                - modules for parsing (and creating!) MIME entities
MIME::Base32              - Base32 encoder and decoder
MIME::Base64              - Encoding and decoding of base64 strings
MIME::Body                - the body of a MIME message
MIME::Charset             - Charset Information for MIME
MIME::Decoder             - an object for decoding the body part of a MIME stream
MIME::Decoder::Base64     - encode/decode a "base64" stream
MIME::Decoder::BinHex     - decode a "binhex" stream
MIME::Decoder::Binary     - perform no encoding/decoding
MIME::Decoder::Gzip64     - decode a "base64" gzip stream
MIME::Decoder::NBit       - encode/decode a "7bit" or "8bit" stream
MIME::Decoder::QuotedPrint - encode/decode a "quoted-printable" stream
MIME::Decoder::UU         - decode a "uuencoded" stream
MIME::Entity              - class for parsed-and-decoded MIME message
MIME::Field::ConTraEnc    - a "Content-transfer-encoding" field
MIME::Field::ContDisp     - a "Content-disposition" field
MIME::Field::ContType     - a "Content-type" field
MIME::Field::ParamVal     - subclass of Mail::Field, for structured MIME fields
MIME::Head                - MIME message header (a subclass of Mail::Header)
MIME::Parser              - experimental class for parsing MIME streams
MIME::Parser::Filer       - manage file-output of the parser
MIME::Parser::Reader      - a line-oriented reader for a MIME::Parser
MIME::Parser::Results     - results of the last entity parsed
MIME::QuotedPrint         - Encoding and decoding of quoted-printable strings
MIME::WordDecoder         - decode RFC 2047 encoded words to a local representation
MIME::Words               - deal with RFC 2047 encoded words
Math::BigFloat            - Arbitrary size floating point math package
Math::BigInt              - Arbitrary size integer/float math package
Math::BigInt::Calc        - Pure Perl module to support Math::BigInt
Math::BigInt::CalcEmu     - Emulate low-level math with BigInt code
Math::BigInt::FastCalc    - Math::BigInt::Calc with some XS for more speed
Math::BigInt::Lib         - virtual parent class for Math::BigInt libraries
Math::BigRat              - Arbitrary big rational numbers
Math::Complex             - complex numbers and associated mathematical functions
Math::Trig                - trigonometric functions
Memoize                   - Make functions faster by trading space for time
Memoize::AnyDBM_File      - glue to provide EXISTS for AnyDBM_File for Storable use
Memoize::Expire           - Plug-in module for automatic expiration of memoized values
Memoize::ExpireFile       - test for Memoize expiration semantics
Memoize::ExpireTest       - test for Memoize expiration semantics
Memoize::NDBM_File        - glue to provide EXISTS for NDBM_File for Storable use
Memoize::SDBM_File        - glue to provide EXISTS for SDBM_File for Storable use
Memoize::Storable         - store Memoized data in Storable database
Metabase::Fact            - base class for Metabase Facts
Metabase::Fact::Hash      - fact subtype for simple hashes
Metabase::Fact::String    - fact subtype for simple strings
Metabase::Report          - a base class for collections of Metabase facts
Metabase::Resource        - factory class for Metabase resource descriptors
Metabase::Resource::cpan  - class for Metabase resources
Metabase::Resource::cpan::distfile - class for Metabase resources
Metabase::Resource::metabase - class for Metabase resources
Metabase::Resource::metabase::fact - class for Metabase facts
Metabase::Resource::metabase::user - class for Metabase user profiles
Metabase::Resource::perl  - class for Metabase resources under the perl scheme
Metabase::Resource::perl::commit - class for Metabase resources about perl commits
Metabase::User::EmailAddress - Metabase fact for user email address
Metabase::User::FullName  - Metabase fact for user full name
Metabase::User::Profile   - Metabase report class for user-related facts
Metabase::User::Secret    - Metabase fact for user shared authentication secret
Module::Build             - Build and install Perl modules
Module::Build::Base       - Default methods for Module::Build
Module::Build::Compat     - Compatibility with ExtUtils::MakeMaker
Module::Build::ConfigData - Configuration for Module::Build
Module::Build::Cookbook   - Examples of Module::Build Usage
Module::Build::Notes      - Create persistent distribution configuration modules
Module::Build::PPMMaker   - Perl Package Manager file creation
Module::Build::Platform::Default - Stub class for unknown platforms
Module::Build::Platform::MacOS - Builder class for MacOS platforms
Module::Build::Platform::Unix - Builder class for Unix platforms
Module::Build::Platform::VMS - Builder class for VMS platforms
Module::Build::Platform::VOS - Builder class for VOS platforms
Module::Build::Platform::Windows - Builder class for Windows platforms
Module::Build::Platform::aix - Builder class for AIX platform
Module::Build::Platform::cygwin - Builder class for Cygwin platform
Module::Build::Platform::darwin - Builder class for Mac OS X platform
Module::Build::Platform::os2 - Builder class for OS/2 platform
Module::Build::Tiny       - A tiny replacement for Module::Build
Module::CoreList::Utils   - what utilities shipped with versions of perl
Module::Implementation    - Loads one of several alternate underlying implementations for a module
Module::Load              - runtime require of both modules and files
Module::Load::Conditional - Looking up module information / loading at runtime
Module::Loaded            - mark modules as loaded or unloaded
Module::Metadata          - Gather package and POD information from perl module files
Module::Pluggable         - automatically give your module the ability to have plugins
Module::Pluggable::Object - automatically give your module the ability to have plugins
Module::Runtime           - runtime module handling
Module::ScanDeps          - Recursively scan Perl code for dependencies
Module::Signature         - Module signature file manipulation
NDBM_File                 - Tied access to ndbm files
NEXT                      - Provide a pseudo-class NEXT (et al) that allows method redispatch
Net::Cmd                  - Network Command class (as used by FTP, SMTP etc)
Net::Config               - Local configuration data for libnet
Net::Domain               - Attempt to evaluate the current host's internet name and domain
Net::FTP                  - FTP Client class
Net::FTP::dataconn        - FTP Client data connection class
Net::NNTP                 - NNTP Client class
Net::Netrc                - OO interface to users netrc file
Net::POP3                 - Post Office Protocol 3 Client class (RFC1939)
Net::Ping                 - check a remote host for reachability
Net::SMTP                 - Simple Mail Transfer Protocol Client
Net::SMTP::SSL            - SSL support for Net::SMTP
Net::SSLeay::Handle       - Perl module that lets SSL (HTTPS) sockets be
Net::Time                 - time and daytime network client interface
Net::hostent              - by-name interface to Perl's built-in gethost*() functions
Net::netent               - by-name interface to Perl's built-in getnet*() functions
Net::protoent             - by-name interface to Perl's built-in getproto*() functions
Net::servent              - by-name interface to Perl's built-in getserv*() functions
O                         - Generic interface to Perl Compiler backends
ODBM_File                 - Tied access to odbm files
Opcode                    - Disable named opcodes when compiling perl code
PAR::Dist                 - Create and manipulate PAR distributions
Package::Stash::XS        - faster and more correct implementation of the Package::Stash API
Params::Check             - A generic input parsing/checking mechanism.
Params::Util              - Simple, compact and correct param-checking functions
Parse::CPAN::Meta         - Parse META.yml and META.json CPAN metadata files
Perl::OSType              - Map Perl operating system names to generic types
PerlIO                    - On demand loader for PerlIO layers and root of PerlIO::* name space
PerlIO::encoding          - encoding layer
PerlIO::mmap              - Memory mapped IO
PerlIO::scalar            - in-memory IO, scalar IO
PerlIO::via               - Helper class for PerlIO layers implemented in perl
PerlIO::via::QuotedPrint  - PerlIO layer for quoted-printable strings
Pod::Checker              - check pod documents for syntax errors
Pod::Escapes              - for resolving Pod EE<lt>...E<gt> sequences
Pod::Find                 - find POD documents in directory trees
Pod::Functions            - Group Perl's functions a la perlfunc.pod
Pod::Html                 - module to convert pod files to HTML
Pod::InputObjects         - objects representing POD input paragraphs, commands, etc.
Pod::Man                  - Convert POD data to formatted *roff input
Pod::ParseLink            - Parse an LE<lt>E<gt> formatting code in POD text
Pod::ParseUtils           - helpers for POD parsing and conversion
Pod::Parser               - base class for creating POD filters and translators
Pod::Perldoc              - Look up Perl documentation in Pod format.
Pod::Perldoc::BaseTo      - Base for Pod::Perldoc formatters
Pod::Perldoc::GetOptsOO   - Customized option parser for Pod::Perldoc
Pod::Perldoc::ToANSI      - render Pod with ANSI color escapes 
Pod::Perldoc::ToChecker   - let Perldoc check Pod for errors
Pod::Perldoc::ToMan       - let Perldoc render Pod as man pages
Pod::Perldoc::ToNroff     - let Perldoc convert Pod to nroff
Pod::Perldoc::ToPod       - let Perldoc render Pod as ... Pod!
Pod::Perldoc::ToRtf       - let Perldoc render Pod as RTF
Pod::Perldoc::ToTerm      - render Pod with terminal escapes
Pod::Perldoc::ToText      - let Perldoc render Pod as plaintext
Pod::Perldoc::ToTk        - let Perldoc use Tk::Pod to render Pod
Pod::Perldoc::ToXml       - let Perldoc render Pod as XML
Pod::PlainText            - Convert POD data to formatted ASCII text
Pod::Simple::Checker      - check the Pod syntax of a document
Pod::Simple::Debug        - put Pod::Simple into trace/debug mode
Pod::Simple::DumpAsText   - dump Pod-parsing events as text
Pod::Simple::DumpAsXML    - turn Pod into XML
Pod::Simple::HTML         - convert Pod to HTML
Pod::Simple::HTMLBatch    - convert several Pod files to several HTML files
Pod::Simple::LinkSection  - represent "section" attributes of L codes
Pod::Simple::Methody      - turn Pod::Simple events into method calls
Pod::Simple::PullParser   - a pull-parser interface to parsing Pod
Pod::Simple::PullParserEndToken - end-tokens from Pod::Simple::PullParser
Pod::Simple::PullParserStartToken - start-tokens from Pod::Simple::PullParser
Pod::Simple::PullParserTextToken - text-tokens from Pod::Simple::PullParser
Pod::Simple::PullParserToken - tokens from Pod::Simple::PullParser
Pod::Simple::RTF          - format Pod as RTF
Pod::Simple::Search       - find POD documents in directory trees
Pod::Simple::SimpleTree   - parse Pod into a simple parse tree 
Pod::Simple::Text         - format Pod as plaintext
Pod::Simple::TextContent  - get the text content of Pod
Pod::Simple::XHTML        - format Pod as validating XHTML
Pod::Simple::XMLOutStream - turn Pod into XML
Pod::Text                 - Convert POD data to formatted text
Pod::Text::Color          - Convert POD data to formatted color ASCII text
Pod::Text::Termcap        - Convert POD data to ASCII text with format escapes
Pod::Usage                - print a usage message from embedded pod documentation
Probe::Perl               - Information about the currently running perl
SDBM_File                 - Tied access to sdbm files
Safe                      - Compile and execute code in restricted compartments
Scalar::Util              - A selection of general-utility scalar subroutines
Search::Dict              - look - search for key in dictionary file
SelectSaver               - save and restore selected file handle
SelfLoader                - load functions only on demand
Storable                  - persistence for Perl data structures
Sub::Exporter             - a sophisticated exporter for custom-built routines
Sub::Exporter::Util       - utilities to make Sub::Exporter easier
Sub::Install              - install subroutines into packages easily
Sub::Util                 - A selection of utility subroutines for subs and CODE references
Symbol                    - manipulate Perl symbols and their names
Sys::Hostname             - Try every conceivable way to get hostname
Sys::Syslog               - Perl interface to the UNIX syslog(3) calls
TAP::Base                 - Base class that provides common functionality to L<TAP::Parser>
TAP::Formatter::Base      - Base class for harness output delegates
TAP::Formatter::Color     - Run Perl test scripts with color
TAP::Formatter::Console   - Harness output delegate for default console output
TAP::Formatter::Console::ParallelSession - Harness output delegate for parallel console output
TAP::Formatter::Console::Session - Harness output delegate for default console output
TAP::Formatter::File      - Harness output delegate for file output
TAP::Formatter::File::Session - Harness output delegate for file output
TAP::Formatter::Session   - Abstract base class for harness output delegate 
TAP::Harness              - Run test scripts with statistics
TAP::Harness::Env         - Parsing harness related environmental variables where appropriate
TAP::Object               - Base class that provides common functionality to all C<TAP::*> modules
TAP::Parser               - Parse L<TAP|Test::Harness::TAP> output
TAP::Parser::Aggregator   - Aggregate TAP::Parser results
TAP::Parser::Grammar      - A grammar for the Test Anything Protocol.
TAP::Parser::Iterator     - Base class for TAP source iterators
TAP::Parser::Iterator::Array - Iterator for array-based TAP sources
TAP::Parser::Iterator::Process - Iterator for process-based TAP sources
TAP::Parser::Iterator::Stream - Iterator for filehandle-based TAP sources
TAP::Parser::IteratorFactory - Figures out which SourceHandler objects to use for a given Source
TAP::Parser::Multiplexer  - Multiplex multiple TAP::Parsers
TAP::Parser::Result       - Base class for TAP::Parser output objects
TAP::Parser::Result::Bailout - Bailout result token.
TAP::Parser::Result::Comment - Comment result token.
TAP::Parser::Result::Plan - Plan result token.
TAP::Parser::Result::Pragma - TAP pragma token.
TAP::Parser::Result::Test - Test result token.
TAP::Parser::Result::Unknown - Unknown result token.
TAP::Parser::Result::Version - TAP syntax version token.
TAP::Parser::Result::YAML - YAML result token.
TAP::Parser::ResultFactory - Factory for creating TAP::Parser output objects
TAP::Parser::Scheduler    - Schedule tests during parallel testing
TAP::Parser::Scheduler::Job - A single testing job.
TAP::Parser::Scheduler::Spinner - A no-op job.
TAP::Parser::Source       - a TAP source & meta data about it
TAP::Parser::SourceHandler - Base class for different TAP source handlers
TAP::Parser::SourceHandler::Executable - Stream output from an executable TAP source
TAP::Parser::SourceHandler::File - Stream TAP from a text file.
TAP::Parser::SourceHandler::Handle - Stream TAP from an IO::Handle or a GLOB.
TAP::Parser::SourceHandler::Perl - Stream TAP from a Perl executable
TAP::Parser::SourceHandler::RawTAP - Stream output from raw TAP in a scalar/array ref.
TAP::Parser::YAMLish::Reader - Read YAMLish data from iterator
TAP::Parser::YAMLish::Writer - Write YAMLish data
Term::ANSIColor           - Color screen output using ANSI escape sequences
Term::Cap                 - Perl termcap interface
Term::Complete            - Perl word completion module
Term::ReadKey             - A perl module for simple terminal control
Term::ReadLine            - Perl interface to various C<readline> packages.
Term::ReadLine::Gnu       - Perl extension for the GNU Readline/History Library
Term::Table               - Format a header and rows into a table
Term::Table::Cell         - Representation of a cell in a table.
Term::Table::CellStack    - Combine several cells into one (vertical)
Term::Table::HashBase     - Build hash based classes.
Term::Table::LineBreak    - Break up lines for use in tables.
Term::Table::Util         - Utilities for Term::Table.
Test                      - provides a simple framework for writing test scripts
Test2                     - Framework for writing test tools that all work together.
Test2::API                - Primary interface for writing Test2 based testing tools.
Test2::API::Breakage      - What breaks at what version
Test2::API::Context       - Object to represent a testing context.
Test2::API::Instance      - Object used by Test2::API under the hood
Test2::API::Stack         - Object to manage a stack of L<Test2::Hub>
Test2::Event              - Base class for events
Test2::Event::Bail        - Bailout!
Test2::Event::Diag        - Diag event type
Test2::Event::Encoding    - Set the encoding for the output stream
Test2::Event::Exception   - Exception event
Test2::Event::Generic     - Generic event type.
Test2::Event::Info        - Info event base class
Test2::Event::Note        - Note event type
Test2::Event::Ok          - Ok event type
Test2::Event::Plan        - The event of a plan
Test2::Event::Skip        - Skip event type
Test2::Event::Subtest     - Event for subtest types
Test2::Event::TAP::Version - Event for TAP version.
Test2::Event::Waiting     - Tell all procs/threads it is time to be done
Test2::Formatter          - Namespace for formatters.
Test2::Formatter::TAP     - Standard TAP formatter
Test2::Hub                - The conduit through which all events flow.
Test2::Hub::Interceptor   - Hub used by interceptor to grab results.
Test2::Hub::Interceptor::Terminator - Exception class used by
Test2::Hub::Subtest       - Hub used by subtests
Test2::IPC                - Turn on IPC for threading or forking support.
Test2::IPC::Driver        - Base class for Test2 IPC drivers.
Test2::IPC::Driver::Files - Temp dir + Files concurrency model.
Test2::Tools::Tiny        - Tiny set of tools for unfortunate souls who cannot use
Test2::Util               - Tools used by Test2 and friends.
Test2::Util::ExternalMeta - Allow third party tools to safely attach meta-data
Test2::Util::HashBase     - Build hash based classes.
Test2::Util::Trace        - Debug information for events
Test::Builder             - Backend for building test libraries
Test::Builder::Formatter  - Test::Builder subclass of Test2::Formatter::TAP
Test::Builder::IO::Scalar - A copy of IO::Scalar for Test::Builder
Test::Builder::Module     - Base class for test modules
Test::Builder::Tester     - test testsuites that have been built with
Test::Builder::Tester::Color - turn on colour in Test::Builder::Tester
Test::Builder::TodoDiag   - Test::Builder subclass of Test2::Event::Diag
Test::CPAN::Changes       - Validation of the Changes file in a CPAN distribution
Test::Harness             - Run Perl standard test scripts with statistics
Test::More                - yet another framework for writing test scripts
Test::Reporter            - sends test results to cpan-testers@perl.org
Test::Reporter::Transport - base class for Test::Reporter transports
Test::Reporter::Transport::File - File transport for Test::Reporter
Test::Reporter::Transport::Null - Null transport for Test::Reporter
Test::Simple              - Basic utilities for writing tests.
Test::Tester              - Ease testing test modules built with Test::Builder
Test::Tester::Capture     - Help testing test modules built with Test::Builder
Test::Tester::CaptureRunner - Help testing test modules built with Test::Builder
Test::use::ok             - Alternative to Test::More::use_ok
Text::Abbrev              - abbrev - create an abbreviation table from a list
Text::Balanced            - Extract delimited text sequences from strings.
Text::ParseWords          - parse text into an array of tokens or array of arrays
Text::Tabs                - expand and unexpand tabs like unix expand(1) and unexpand(1)
Text::Wrap                - line wrapping to form simple paragraphs
Thread                    - Manipulate threads in Perl (for old code only)
Thread::Queue             - Thread-safe queues
Thread::Semaphore         - Thread-safe semaphores
Tie::Array                - base class for tied arrays
Tie::ExtraHash            - base class definitions for tied hashes
Tie::File                 - Access the lines of a disk file via a Perl array
Tie::Handle               - base class definitions for tied handles
Tie::Hash::NamedCapture   - Named regexp capture buffers
Tie::Memoize              - add data to hash when needed
Tie::RefHash              - use references as hash keys
Tie::StdHandle            - base class definitions for tied handles
Tie::StdScalar            - base class definitions for tied scalars
Tie::SubstrHash           - Fixed-table-size, fixed-key-length hashing
Time::HiRes               - High resolution alarm, sleep, gettimeofday, interval timers
Time::Local               - Efficiently compute time from local and GMT time
Time::Piece               - Object Oriented time objects
Time::Seconds             - a simple API to convert seconds to other date values
Time::Zone                - miscellaneous timezone manipulations routines
Time::gmtime              - by-name interface to Perl's built-in gmtime() function
Time::localtime           - by-name interface to Perl's built-in localtime() function
Time::tm                  - internal object used by Time::gmtime and Time::localtime
Try::Tiny                 - Minimal try/catch with proper preservation of $@
Types::Serialiser         - simple data types for common serialisation formats
Types::Serialiser::Error  - dummy module for Types::Serialiser
UNIVERSAL                 - base class for ALL classes (blessed references)
Unicode::CaseFold         - Unicode case-folding for case-insensitive lookups.
Unicode::Collate          - Unicode Collation Algorithm
Unicode::Collate::CJK::Big5 - weighting CJK Unified Ideographs
Unicode::Collate::CJK::GB2312 - weighting CJK Unified Ideographs
Unicode::Collate::CJK::JISX0208 - weighting JIS KANJI for Unicode::Collate
Unicode::Collate::CJK::Korean - weighting CJK Unified Ideographs
Unicode::Collate::CJK::Pinyin - weighting CJK Unified Ideographs
Unicode::Collate::CJK::Stroke - weighting CJK Unified Ideographs
Unicode::Collate::CJK::Zhuyin - weighting CJK Unified Ideographs
Unicode::Collate::Locale  - Linguistic tailoring for DUCET via Unicode::Collate
Unicode::Normalize        - Unicode Normalization Forms
Unicode::UCD              - Unicode character database
User::grent               - by-name interface to Perl's built-in getgr*() functions
User::pwent               - by-name interface to Perl's built-in getpw*() functions
Win32                     - Interfaces to some Win32 API Functions
Win32API::File            - Low-level access to Win32 system API calls for files/dirs.
Win32CORE                 - Win32 CORE function stubs
XSLoader                  - Dynamically load C libraries into Perl code
YAML::Tiny                - Read/Write YAML files with as little code as possible
YAML::XS::LibYAML         - An XS Wrapper Module of libyaml
arybase                   - Set indexing base via $[
attributes                - get/set subroutine or variable attributes
autodie                   - Replace functions with ones that succeed or die with lexical scope
autodie::Scope::Guard     - Wrapper class for calling subs at end of scope
autodie::Scope::GuardStack - Hook stack for managing scopes via %^H
autodie::Util             - Internal Utility subroutines for autodie and Fatal
autodie::exception        - Exceptions from autodying functions.
autodie::exception::system - Exceptions from autodying system().
autodie::hints            - Provide hints about user subroutines to autodie
autodie::skip             - Skip a package when throwing autodie exceptions
autouse                   - postpone load of modules until a function is used
autovivification          - Lexically disable autovivification.
base                      - Establish an ISA relationship with base classes at compile time
bigint                    - Transparent BigInteger support for Perl
bignum                    - Transparent BigNumber support for Perl
bigrat                    - Transparent BigNumber/BigRational support for Perl
blib                      - Use MakeMaker's uninstalled version of a package
bytes                     - Perl pragma to expose the individual bytes of characters
charnames                 - access to Unicode character names and named character sequences; also define character names
constant                  - Perl pragma to declare constants
cpanm                     - get, unpack build and install modules from CPAN
deprecate                 - Perl pragma for deprecating the core version of a module
encoding                  - allows you to write your script in non-ASCII and non-UTF-8
encoding::warnings        - Warn on implicit encoding conversions
experimental              - Experimental features made easy
feature                   - Perl pragma to enable new features
fields                    - compile-time class fields
filetest                  - Perl pragma to control the filetest permission operators
if                        - C<use> a Perl module if a condition holds (also can C<no> a module)
inc::latest               - use modules bundled in inc/ if they are newer than installed ones
inc::latest::private      - private implementation for inc::latest
integer                   - Perl pragma to use integer arithmetic instead of floating point
less                      - perl pragma to request less of something
lib                       - manipulate @INC at compile time
lib::core::only           - Remove all non-core paths from @INC to avoid site/vendor dirs
local::lib                - create and use a local lib/ for perl modules with PERL5LIB
locale                    - Perl pragma to use or avoid POSIX locales for built-in operations
mro                       - Method Resolution Order
ok                        - Alternative to Test::More::use_ok
open                      - perl pragma to set default PerlIO layers for input and output
ops                       - Perl pragma to restrict unsafe operations when compiling
overload                  - Package for overloading Perl operations
overloading               - perl pragma to lexically control overloading
parent                    - Establish an ISA relationship with base classes at compile time
podselect()               - extract selected sections of POD from input
re                        - Perl pragma to alter regular expression behaviour
sigtrap                   - Perl pragma to enable simple signal handling
sort                      - perl pragma to control sort() behaviour
splain                    - produce verbose warning diagnostics
strict                    - Perl pragma to restrict unsafe constructs
subs                      - Perl pragma to predeclare sub names
threads                   - Perl interpreter-based threads
threads::shared           - Perl extension for sharing data structures between threads
utf8                      - Perl pragma to enable/disable UTF-8 (or UTF-EBCDIC) in source code
vars                      - Perl pragma to predeclare global variable names
vmsish                    - Perl pragma to control VMS-specific language features
warnings                  - Perl pragma to control optional warnings
warnings::register        - warnings import function
